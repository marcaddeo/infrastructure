---
- name: restart networking
  shell: "ip addr flush {{ interface_name }} && systemctl restart networking"
  when: item.changed
  with_items: "{{ network_interfaces_updates.results }}"
  vars:
    interface_name: "{{ item.item.name | default(item.item.key) }}"
  async: 120
  poll: 0
  register: net_restarting

- name: check restart networking status
  async_status:
    jid: "{{ item.ansible_job_id }}"
  with_items: "{{ net_restarting.results }}"
  when: item.ansible_job_id is defined
  register: async_poll_results
  until: async_poll_results.finished
  retries: 30
  listen: restart networking
