---
- name: Provision pfSense
  hosts: pfsense_servers
  become: true
  vars:
    default_dns_records: []
    mgmt_dns_records: []
    san_dns_records: []
  tasks:
    - name: Gather Default DNS Records
      set_fact:
        default_dns_records: "{{ default_dns_records + (item.value | json_query(_query)) }}"
      loop: "{{ hostvars | dict2items }}"
      loop_control:
        label: "{{ item.value.device_hostname | default(item.key) }}"
      when: (item.value.dns_default_record is defined and item.value.dns_default_record)
        and item.value.device_hostname is defined
        and item.value.device_fqdn is defined
      vars:
        _query: |-
          [{
            host: device_hostname,
            domain: dns_domain,
            ip: device_ips
            descr: device_description || ``
          }]
      tags:
        - dns-records

    - name: Gather MGMT DNS Records
      set_fact:
        mgmt_dns_records: "{{ mgmt_dns_records + (item.value | json_query(_query)) }}"
      loop: "{{ hostvars | dict2items }}"
      loop_control:
        label: "{{ item.value.device_hostname | default(item.key) }}"
      when: item.value.dns_mgmt_interface is defined
        and item.value.device_hostname is defined
        and item.value.device_fqdn is defined
      vars:
        _interface: "{{ item.value.dns_mgmt_interface }}"
        _device_hostname: "{{ item.value.device_hostname }}.mgmt"
        _ip: "{{ item.value.device_interfaces | default([]) | json_query('[?name == `' ~ _interface ~ '`].ip | [0]') }}"
        _interface_description: "{{ _device_hostname }}.{{ dns_domain }}:{{ _interface }}: {{ item.value.device_interfaces | default([]) | json_query('[?name == `' ~ _interface ~ '`].description | [0]') }}" # noqa: yaml[line-length]
        _query: |-
          [{
            host: `{{ _device_hostname }}`,
            domain: dns_domain,
            ip: `{{ _ip }}`,
            descr: `{{ _interface_description }}`
          }]
      tags:
        - dns-records

    - name: Gather SAN DNS Records
      set_fact:
        san_dns_records: "{{ san_dns_records + (item.value | json_query(_query)) }}"
      loop: "{{ hostvars | dict2items }}"
      loop_control:
        label: "{{ item.value.device_hostname | default(item.key) }}"
      when: item.value.dns_san_interface is defined
        and item.value.device_hostname is defined
        and item.value.device_fqdn is defined
      vars:
        _interface: "{{ item.value.dns_san_interface }}"
        _device_hostname: "{{ item.value.device_hostname }}.san"
        _ip: "{{ item.value.device_interfaces | default([]) | json_query('[?name == `' ~ _interface ~ '`].ip | [0]') }}"
        _interface_description: "{{ _device_hostname }}.{{ dns_domain }}:{{ _interface }}: {{ item.value.device_interfaces | default([]) | json_query('[?name == `' ~ _interface ~ '`].description | [0]') }}" # noqa: yaml[line-length]
        _query: |-
          [{
            host: `{{ _device_hostname }}`,
            domain: dns_domain,
            ip: `{{ _ip }}`,
            descr: `{{ _interface_description }}`
          }]
      tags:
        - dns-records

    - name: Gather all DNS Records
      set_fact:
        all_dns_records: "{{ all_dns_records | default(default_dns_records + mgmt_dns_records + san_dns_records) + [item] }}"
      loop: "{{ hostvars | json_query('*.dns_records') | flatten }}"
      loop_control:
        label: "{{ item.host ~ '.' ~ item.domain }}"
      tags:
        - dns-records

    - name: Remove existing DNS Records
      pfsensible.core.pfsense_dns_resolver:
        hosts: []
        state: present
      tags:
        - dns-records

    - name: Provision DNS Records
      pfsensible.core.pfsense_dns_resolver:
        hosts: "{{ all_dns_records | default([]) }}"
        state: present
      tags:
        - dns-records

    - name: Gather DHCP Static Mappings
      set_fact:
        dhcp_static_mappings: "{{ dhcp_static_mappings | default([]) + (item.value.device_interfaces | json_query(_query)) }}"
      loop: "{{ hostvars | dict2items }}"
      loop_control:
        label: "{{ item.value.device_hostname | default(item.key) }}"
      when: (item.value.manage_dhcp_static_mappings is defined and item.value.manage_dhcp_static_mappings)
        and item.value.device_hostname is defined
        and item.value.device_fqdn is defined
      vars:
        _query: |-
          [*].{
            hostname: `{{ item.value.device_hostname }}`,
            macaddr: mac,
            ipaddr: ip,
            descr: join(``, [
              `{{ item.value.device_fqdn }}:`,
              name,
              description && join(``, [`: `, description]) || ``
            ])
          }
      tags:
        - dhcp-static-mappings

    - name: Add VLAN network interface name to DHCP Static Mappings
      set_fact:
        dhcp_static_mappings_netif: |-
          {{
            dhcp_static_mappings_netif | default([])
            + [
              item | combine({
                'netif': (vlans | selectattr('id', 'eq', item.ipaddr.split('.')[1:3] | join('') | int)).0.name
              })
            ]
          }}
      loop: "{{ dhcp_static_mappings | default([]) }}"
      tags:
        - dhcp-static-mappings

    - name: Provision DHCP static mappings # noqa: args[module]
      pfsensible.core.pfsense_dhcp_static: "{{ item }}"
      loop: "{{ dhcp_static_mappings_netif | default([]) }}"
      tags:
        - dhcp-static-mappings
